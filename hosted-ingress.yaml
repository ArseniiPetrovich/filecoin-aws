apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: node-ingress
  namespace: interopnet
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/cors-allow-headers: Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Length,Content-Range,Range
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    # avoid websocket timeouts. default is 60s
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
spec:
  tls:
  - hosts:
    - node.glif.io
    secretName: hosting-ingress-tls
  rules:
  - host: node.glif.io
    http:
      paths:
        - backend:
            serviceName: node01-lotus-service
            servicePort: 1234
          path: /01(/|$)(.*)
        - backend:
            serviceName: node02-lotus-service
            servicePort: 1234
          path: /02(/|$)(.*)
        - backend:
            serviceName: node03-lotus-service
            servicePort: 1234
          path: /03(/|$)(.*)
        - backend:
            serviceName: node04-lotus-service
            servicePort: 1234
          path: /04(/|$)(.*)
        - backend:
            serviceName: node05-lotus-service
            servicePort: 1234
          path: /05(/|$)(.*)
        - backend:
            serviceName: node06-lotus-service
            servicePort: 1234
          path: /06(/|$)(.*)
        - backend:
            serviceName: node07-lotus-service
            servicePort: 1234
          path: /07(/|$)(.*)
